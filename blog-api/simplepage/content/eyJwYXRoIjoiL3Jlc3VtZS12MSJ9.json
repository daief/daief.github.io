{"id":"34787f8e18c76ce0f4c3cc680ab728ef","slug":"resume-v1","path":"/resume-v1","title":"简历","comments":false,"published":true,"date":"2019-11-10T22:31:53.000Z","updated":"","tags":[],"categories":[],"excerpt":"<h1 id=\"联系方式\">联系方式<a name=\"联系方式\" class=\"headerlink\" href=\"#联系方式\"></a></h1><ul>\n<li>姓名：戴**</li>\n<li>手机：177*****732</li>\n<li>Email：<a href=\"mailto:&amp;#x64;&amp;#101;&amp;#x66;&amp;#101;&amp;#x6e;&amp;#103;&amp;#x5f;&amp;#x6d;&amp;#x61;&amp;#x69;&amp;#x6c;&amp;#x40;&amp;#x31;&amp;#x36;&amp;#x33;&amp;#x2e;&amp;#x63;&amp;#x6f;&amp;#x6d;\">&#x64;&#101;&#x66;&#101;&#x6e;&#103;&#x5f;&#x6d;&#x61;&#x69;&#x6c;&#x40;&#x31;&#x36;&#x33;&#x2e;&#x63;&#x6f;&#x6d;</a></li>\n<li>微信号：<a href=\"https://daief.tech/images/wechat.jpg\">defenghznu</a></li>\n</ul>\n<h1 id=\"个人信息\">个人信息<a name=\"个人信息\" class=\"headerlink\" href=\"#个人信息\"></a></h1><ul>\n<li>男 / 1996-10</li>\n<li>本科 / 杭州师范大学 / 计算机科学与技术 / 2014-09 ~ 2018-06</li>\n<li>个人博客：<a data-layout=\"card\" href=\"https://daief.tech\">https://daief.tech</a></li>\n<li>Github：<a data-layout=\"card\" href=\"https://github.com/daief\">https://github.com/daief</a></li>\n<li>期望职位：Web 前端工程师<!-- - 工作年限：2 年 -->\n<!-- - 现居城市：杭州市 --></li>\n</ul>\n<h1 id=\"工作经历\">工作经历<a name=\"工作经历\" class=\"headerlink\" href=\"#工作经历\"></a></h1><h2 id=\"杭州惠借科技有限公司（ 2018-01 ~ 至今 ）- 前端工程师\">杭州惠借科技有限公司（ 2018-01 ~ 至今 ）- 前端工程师<a name=\"杭州惠借科技有限公司（ 2018-01 ~ 至今 ）- 前端工程师\" class=\"headerlink\" href=\"#杭州惠借科技有限公司（ 2018-01 ~ 至今 ）- 前端工程师\"></a></h2><h3 id=\"前端标准统一（2019-07 ~ 至今）\">前端标准统一（2019-07 ~ 至今）<a name=\"前端标准统一（2019-07 ~ 至今）\" class=\"headerlink\" href=\"#前端标准统一（2019-07 ~ 至今）\"></a></h3><p>描述：一直以来前端开发比较自由，且没有完善的组件库、统一框架，公共模块管理较为混杂，且常有重复实现、或是实现不统一等问题。针对前端现有问题进行统一的解决措施。</p>\n<p>职责：参与前端规范统一问题的整合，我负责模块的设计与开发，编写必要的单元测试，并持续维护良好的说明使用文档及变更日志。所有模块以 npm 模块形式托管于私仓，产出的模块包括但不限于：</p>\n<ul>\n<li>工具类库的整合，如：友好的原生交互模块，定制化的请求模块等等</li>\n<li>React、Vue 组件的封装</li>\n<li>Next.js、Nuxt.js 配置项的提取</li>\n</ul>\n<p>在开发模式时会考虑以下几个点：</p>\n<ul>\n<li>源码语言采用 TypeScript，一是在编码以及后期迭代的环节中获得 TS 带来的好处，二是能较为方便地生成最终结果的类型文件</li>\n<li>源码的打包及编译，常规模块一般都会输出成 CommonJS、ESModule 两种规范的结果，有些模块可能还需要提供 UMD 规范的结果，同时打包编译的过程中会涉及到 <code>*.vue</code>、<code>*.less</code>、<code>*.png</code> 等不同类型的文件处理。针对这个问题，在自研脚手架的基础上编写了插件获得了良好的解决</li>\n<li>编写必要的单元测试，保证迭代的稳定性</li>\n<li>组织好规范的目录结构，用于较好地管理模块内部的子模块，同时对外提供了友好地引用方式，或是支持模块按需引用的需求</li>\n<li>同步维护相应的文档，不单单满足于普通的 Markdown 文档，需要以一种更为友好地方式来展现文档，若是组件类模块，还有能直接渲染组件的需求。同样制定了工具来解决这个问题，最终能直接根据 Markdown 文件生成一个静态的文档网站</li>\n</ul>\n<p>最终：</p>\n<ul>\n<li>各种模块的产出涵盖到了大部分的重要功能，解决了公共模块重复实现、混杂等问题，为业务开发带去了切实有效的基础建设</li>\n<li>良好地规划以及约定为公共模块的持续产出制定了较好的基础</li>\n<li>良好地文档产出为开发者提供了极大的帮助</li>\n</ul>\n<!--\n具体的解决方式是维护统一的公共库，制定统一的框架标准以及项目结构\n -->\n\n<h3 id=\"统一登录后台（2019-06 ~ 2019-09）\">统一登录后台（2019-06 ~ 2019-09）<a name=\"统一登录后台（2019-06 ~ 2019-09）\" class=\"headerlink\" href=\"#统一登录后台（2019-06 ~ 2019-09）\"></a></h3><p>描述：这是一个相对系统的工程，主要解决了多个业务产生了诸多后台而体系混乱的问题，对各种内部后台能有统一的用户、权限、应用管理。</p>\n<p>职责：前后端分离，我负责前端的技术选型及开发，所用技术栈为 Next.js、Ant Design 3、GraphQL。</p>\n<p>该项目在技术上的一个核心内容是进行服务端渲染的学习探索以及实践，在选型过程中主要有以下几点：</p>\n<ul>\n<li>限定于前端开发人员的范畴内，尽量不涉及其他端的改造</li>\n<li>在公司现有体系的基础上，选定已经熟悉的 React、Ant Design</li>\n<li>选择了知名度、适用性、持续性、自由度都较高的 Next.js</li>\n<li>GraphQL 的引入，尝试接口查询的新兴技术及便利，这一点会有一些激进</li>\n<li>最后同时是重要的一点，需要考虑具体的实施成本、团队成员的使用成本</li>\n</ul>\n<p>最终，基于一些成本的考虑，没有在生产环境中引入 SSR 以及 Node 中间层，而是分别使用了两者的简化版，可繁可简的特点也是选择这两种技术的一大原因，避免了因为一些激进行为会带来副作用的可能：</p>\n<ul>\n<li>依赖 Next.js 的预渲染功能，从而免去 Node 层，依旧极大地优化了单页应用的白屏问题</li>\n<li>仅引入 GraphQL 客户端以及少量 GraphQL 语法，即可在客户端层面直接调用 RESTful API，并实现接口聚合、字段查询等功能</li>\n</ul>\n<p>这个系统解决了公司长久以来各个后台登录及权限分散管理的问题，同时提升了运营人员的使用体验。</p>\n<!--\n初期企图实行 SSR 同构方案，硬着头皮开始 Node.js 服务端方向的编写，调研试用了 Next.js + Fastify + GraphQL，在 Java 后端 JWT 的基础上，由 Node.js 中间层通过 cookie 实现了单点登录的功能。\n\n中期，经过考虑：\n\n- 添加了 Node.js 中间层、GraphQL 增加了整体前端开发人员的难度\n- 实现 GraphQL 服务需要在 Node.js 中间层由前端人员与 Java 服务提供的 RESTful API 一一对接，极大增大了工作量以及维护成本\n\n这样的产出比在当前场景会比较低，最终确定了简化版的方案，能够用上新技术、开发更友好同时能提升体验：\n\n- 依旧使用 Next.js，但不以 SSR 形式部署，只做页面的静态预渲染，带来首屏加载的优化。同时，要求开发者有同构的意识、了解 SSR 的基本原理\n- 仅在前端范畴使用 GraphQL，使用 GraphQL 的语法、概念、工具在前端（客户端）做到 GraphQL 带来的字段查询、接口聚合等功能\n-->\n\n<h3 id=\"移动端 Web 页面开发（2018-01 ~ 至今）\">移动端 Web 页面开发（2018-01 ~ 至今）<a name=\"移动端 Web 页面开发（2018-01 ~ 至今）\" class=\"headerlink\" href=\"#移动端 Web 页面开发（2018-01 ~ 至今）\"></a></h3><p>描述：各种内嵌于 APP 内的页面是公司产品的一大重要领域，入职以来的一大主要工作是持续在编写这类页面。</p>\n<p>职责：最基础的是能够独立进行前端页面开发，理解 PRD 需求并按照实现，能够还原设计稿页面，做到常规移动端环境的适配。除此之外，在看似重复的开发中，依旧保持着较好的学习态度，能够在团队中带动积极的学习氛围；并对于一些现有情况，提出自己的疑问、思考，也会尽可能提出解决方案。</p>\n<p>总结：</p>\n<ul>\n<li>能熟练使用 React + TypeScript 进行开发</li>\n<li>能熟练使用 Vue + TypeScript 进行开发</li>\n<li>频繁涉及 Web 与原生的交互，熟悉常规的调试方法</li>\n<li>熟悉 Chrome DevTools 的使用</li>\n<li>熟悉 Webpack 的使用</li>\n<li>学习 TypeScript 并向团队推广，提升了团队协作的开发效率以及可维护性</li>\n<li>改善项目的管理方式，完善依赖的空间占用、下载时间的问题，统一单一仓库下的依赖版本管理</li>\n</ul>\n<h2 id=\"杭州和乐科技有限公司（ 2017-06 ~ 2018-01 ）- 前端实习\">杭州和乐科技有限公司（ 2017-06 ~ 2018-01 ）- 前端实习<a name=\"杭州和乐科技有限公司（ 2017-06 ~ 2018-01 ）- 前端实习\" class=\"headerlink\" href=\"#杭州和乐科技有限公司（ 2017-06 ~ 2018-01 ）- 前端实习\"></a></h2><h3 id=\"母子健康手册\">母子健康手册<a name=\"母子健康手册\" class=\"headerlink\" href=\"#母子健康手册\"></a></h3><p><a href=\"http://muzi.heletech.cn:3003/mz/mz-health-hz/read-pdf/html/ReadHandbook/read-handbook.html\">在线地址（移动端模式打开）</a></p>\n<p>描述：这是一个在线版的母子健康手册，记录了宝宝诞生前至六岁、母子间爱的记录。该手册由 130+ 张图片构成，并通过前端绘制的方式在手册上绘制用户的相关内容，最终得到了一本定制化的在线手册。</p>\n<p>职责：这是一个前后端分离的项目，我负责前端内容的开发，完成界面展示与交互。</p>\n<p>实现期间主要考虑以下几点：</p>\n<ul>\n<li>交互方面，使用 Canvas 绘制手册的翻页动态效果，做到了相对流畅的交互效果</li>\n<li>一本手册涉及大量的图片加载，为了加强用户体验，从两个方面进行了优化<ul>\n<li>按需加载，每次只会拉取用户当前所在页码前后的图片，极大节约了用户流量和时间</li>\n<li>使用 IndexedDB 手动管理图片的持久化存储，极大地提升了用户二次访问时的体验</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"技能清单\">技能清单<a name=\"技能清单\" class=\"headerlink\" href=\"#技能清单\"></a></h1><!-- - 掌握 HTML、CSS -->\n\n<!-- - 掌握 TypeScript、JavaScript / ES6+ 规范 / 偏爱 TypeScript\n- 熟悉 React、Vue 以及相应的生态 / React 的使用相比较多 / 具备一定的组件抽象开发能力\n- 熟悉 Webpack、Git 等工具的使用\n- 熟悉 Chrome DevTools、Charles 等调试工具的使用\n- 能使用 Node.js 定制化一些脚本工具\n- 了解常用 Linux 命令\n- 了解 Jenkins、Nginx 的配置及使用 -->\n\n<p><img alt=\"skills\" loading=\"lazy\" title=\"skills\" class=\"post-image \" src=\"/images/e94f6fe15922b4b8fd51c5cc27b4d1f9.resume-skills-v1.png\" onerror=\"this.onerror=null;this.src='/images/image-error.jpg';\"></p>\n<h1 id=\"个人作品\">个人作品<a name=\"个人作品\" class=\"headerlink\" href=\"#个人作品\"></a></h1><p>本人热爱技术，工作之余常常会进行自我学习，会将一些内容输出成博客的形式以进行记录和分享，同时也会产出一些个人作品，以下是完成度比较好的一些内容：</p>\n<ul>\n<li><a href=\"https://daief.tech/jugg\">jugg</a>：前端脚手架工具，这一系列基于 Webpack、Gulp 等编写。基于该工具可以很方便地开始项目的开发、类库的开发，并且该工具十分亲和 TypeScript；支持快速构建文档站点，并支持在 Markdown 中直接展示 React 以及 Vue 组件的渲染。</li>\n<li>组件类：<ul>\n<li><a href=\"https://github.com/daief/rc-if\">rc-if</a>：React 简单组件，实现 Vue 中与 <code>v-if</code>、<code>v-else</code> 相似的行为。</li>\n<li><a href=\"https://github.com/daief/axew-toast\">toast</a>：简单泛用无依赖的 <code>toast</code> 组件。</li>\n</ul>\n</li>\n<li>学习兴趣类：<ul>\n<li><a href=\"https://github.com/daief/inject-code\">inject-code</a>：Chrome 扩展程序，可通过该插件向匹配的页面中注入 JS 脚本或 CSS 样式。</li>\n<li><a href=\"https://github.com/daief/espf\">espf</a>：Electron 应用程序，读取系统中 <code>.bash_profile</code>、<code>.zshrc</code> 等启动文件，便于对这类文件的编辑操作。<!-- - [vue-music](https://github.com/daief/vue-music)：基于 Vue 的个人练习项目，根据网易云音乐 PC 页面进行仿造。 --></li>\n</ul>\n</li>\n</ul>\n<!--\n  - 为什么要写这个作品呀？\n  - 简单但不要过于简单了\n\n  - 项目没有具体点。。就是面试可以问的点\n  - 用什么达到什么\n  - 实现了啥\n  - 具体闪光点\n -->\n","more":"","hash":"2118d4e1d4c809b5c6e03e6aae67a303","isArticle":false,"sort":0,"filename":"","raw":"","prev":null,"next":null}