{"current":4,"pageSize":10,"totalPages":6,"result":[{"id":"version-control-of-dependencies-in-package-json","slug":"post/version-control-of-dependencies-in-package-json","path":"/post/version-control-of-dependencies-in-package-json","title":"package.json 中依赖包的版本控制","comments":true,"published":true,"date":"2018-09-16T16:51:33.000Z","updated":"","tags":[{"id":"bb30e85411b56df41296726ab445dc8f","name":"npm","postCount":2,"postIds":[]},{"id":"b9cfc7f2cdf78a7f4b91a753d10865a2","name":"package.json","postCount":1,"postIds":[]},{"id":"7cbe8a17d291fd2ee3a83d2bd6ab023c","name":"语义化版本","postCount":1,"postIds":[]}],"categories":[{"id":"3b2819dd4c24eda2faf2052eef449551","name":"Node.js","slug":"categories/Node.js","path":"/categories/Node.js","parentId":"","postCount":2,"postIds":[]},{"id":"bb30e85411b56df41296726ab445dc8f","name":"npm","slug":"categories/npm","path":"/categories/npm","parentId":"3b2819dd4c24eda2faf2052eef449551","postCount":1,"postIds":[]}],"excerpt":"<p>在<code>package.json</code>中对依赖包的版本使用<code>^</code>、<code>~</code>等时需要注意的地方。\n<a href=\"https://docs.npmjs.com/files/package.json\">package.json 详细说明</a></p>\n","more":"","hash":"277d03204c743b8c2d27a4222af15ce9","isArticle":true,"sort":0,"filename":"","raw":"","prev":null,"next":null,"tocHtml":""},{"id":"declaration-files-of-typescript","slug":"post/declaration-files-of-typescript","path":"/post/declaration-files-of-typescript","title":"TypeScript 中的声明文件","comments":true,"published":true,"date":"2018-09-04T21:10:44.000Z","updated":"","tags":[{"id":"558b544cf685f39d34e4903e39c38b67","name":"TypeScript","postCount":6,"postIds":[]},{"id":"ebbca6b4fc70d03f049d2857fa3e9489","name":"declaration-files","postCount":1,"postIds":[]}],"categories":[{"id":"9abfe4a03928eb88a75a5cd95822dfef","name":"前端","slug":"categories/前端","path":"/categories/前端","parentId":"","postCount":36,"postIds":[]},{"id":"558b544cf685f39d34e4903e39c38b67","name":"TypeScript","slug":"categories/TypeScript","path":"/categories/TypeScript","parentId":"9abfe4a03928eb88a75a5cd95822dfef","postCount":4,"postIds":[]}],"excerpt":"<p>学习 TypeScript 稍微有一段时间了，每次写都会碰到有关声明文件的问题，目前为止暂未完全搞清楚，在此记录一些相关问题，以后碰到能够迅速解决。</p>\n","more":"","hash":"e141cb5859a76e7ee025e59250a7c4ff","isArticle":true,"sort":0,"filename":"","raw":"","prev":null,"next":null,"tocHtml":""},{"id":"10-things-you-will-eventually-learn-about-javascript-projects","slug":"post/10-things-you-will-eventually-learn-about-javascript-projects","path":"/post/10-things-you-will-eventually-learn-about-javascript-projects","title":"[译] 前端编程中 10 条你需要了解的原则","comments":true,"published":true,"date":"2018-09-01T14:44:29.000Z","updated":"","tags":[{"id":"8b3607d0f4181a3cb6ffdccf7185f09b","name":"翻译","postCount":1,"postIds":[]}],"categories":[{"id":"8b3607d0f4181a3cb6ffdccf7185f09b","name":"翻译","slug":"categories/翻译","path":"/categories/翻译","parentId":"","postCount":1,"postIds":[]}],"excerpt":"<blockquote>\n<p>原文：<a href=\"https://blog.usejournal.com/10-things-you-will-eventually-learn-about-javascript-projects-efd7646b958a\">10 things you will eventually learn about javascript projects</a>\n翻译仅供学习</p>\n</blockquote>\n","more":"","hash":"7413f39f94d169699de9f370f997ab0a","isArticle":true,"sort":0,"filename":"","raw":"","prev":null,"next":null,"tocHtml":""},{"id":"a-simple-cli","slug":"post/a-simple-cli","path":"/post/a-simple-cli","title":"简单的前端脚手架","comments":true,"published":true,"date":"2018-08-31T22:53:34.000Z","updated":"","tags":[{"id":"686155af75a60a0f6e9d80c1f7edd3e9","name":"JavaScript","postCount":16,"postIds":[]},{"id":"3b2819dd4c24eda2faf2052eef449551","name":"Node.js","postCount":3,"postIds":[]},{"id":"91af5705f16502125e8b2187e64202c0","name":"CLI","postCount":1,"postIds":[]}],"categories":[{"id":"9abfe4a03928eb88a75a5cd95822dfef","name":"前端","slug":"categories/前端","path":"/categories/前端","parentId":"","postCount":36,"postIds":[]},{"id":"686155af75a60a0f6e9d80c1f7edd3e9","name":"JavaScript","slug":"categories/JavaScript","path":"/categories/JavaScript","parentId":"9abfe4a03928eb88a75a5cd95822dfef","postCount":11,"postIds":[]}],"excerpt":"<p>从零搭建一个简单的脚手架工具，像<code>vue-cli</code>一样，一个命令就能变出一个完整结构的初始项目。流行的脚手架工具有很多实用的功能，这里要说的是最基本的一项：通过一个命令快速创建出初始项目。</p>\n","more":"","hash":"74b3cadc8770c2832c858e3d5e3bc0b8","isArticle":true,"sort":0,"filename":"","raw":"","prev":null,"next":null,"tocHtml":""},{"id":"encapsulate-setTimeout-with-promise","slug":"post/encapsulate-setTimeout-with-promise","path":"/post/encapsulate-setTimeout-with-promise","title":"使用promise封装setTimeout","comments":true,"published":true,"date":"2018-08-21T22:17:59.000Z","updated":"","tags":[{"id":"686155af75a60a0f6e9d80c1f7edd3e9","name":"JavaScript","postCount":16,"postIds":[]},{"id":"a5a3f0f287a448982aac520cffe4779a","name":"Promise","postCount":1,"postIds":[]}],"categories":[{"id":"9abfe4a03928eb88a75a5cd95822dfef","name":"前端","slug":"categories/前端","path":"/categories/前端","parentId":"","postCount":36,"postIds":[]},{"id":"686155af75a60a0f6e9d80c1f7edd3e9","name":"JavaScript","slug":"categories/JavaScript","path":"/categories/JavaScript","parentId":"9abfe4a03928eb88a75a5cd95822dfef","postCount":11,"postIds":[]}],"excerpt":"<p>使用 Promise 对 setTimeout 进行封装，从而支持链式的调用。</p>\n<pre class=\"hljs language-javascript\" hljs-language=\"javascript\"><code style=\"display:block;\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">delay</span> = (<span class=\"hljs-params\">func, millisec, options</span>) =&gt; {\n  <span class=\"hljs-keyword\">let</span> timer = <span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">let</span> reject = <span class=\"hljs-literal\">null</span>\n  <span class=\"hljs-keyword\">const</span> promise = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Promise</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">resolve, _reject</span>) =&gt;</span> {\n    reject = _reject\n    timer = <span class=\"hljs-built_in\">setTimeout</span>(<span class=\"hljs-function\">() =&gt;</span> {\n      <span class=\"hljs-title function_\">resolve</span>(<span class=\"hljs-title function_\">func</span>(options))\n    }, millisec)\n  })\n\n  <span class=\"hljs-keyword\">return</span> {\n    <span class=\"hljs-keyword\">get</span> <span class=\"hljs-title function_\">promise</span>() {\n      <span class=\"hljs-keyword\">return</span> promise\n    },\n    <span class=\"hljs-title function_\">cancel</span>(<span class=\"hljs-params\"></span>) {\n      <span class=\"hljs-keyword\">if</span> (timer) {\n        <span class=\"hljs-built_in\">clearTimeout</span>(timer)\n        timer = <span class=\"hljs-number\">0</span>\n        <span class=\"hljs-title function_\">reject</span>(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Error</span>(<span class=\"hljs-string\">&#x27;timer is cancelled&#x27;</span>))\n        reject = <span class=\"hljs-literal\">null</span>\n      }\n    },\n  }\n}</code></pre><p>使用🌰：</p>\n<pre class=\"hljs language-javascript\" hljs-language=\"javascript\"><code style=\"display:block;\"><span class=\"hljs-keyword\">const</span> d = <span class=\"hljs-title function_\">delay</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">{a, b}</span>) =&gt;</span> {\n  <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(a, b)\n  <span class=\"hljs-keyword\">return</span> a + b\n}, <span class=\"hljs-number\">2000</span>, {<span class=\"hljs-attr\">a</span>: <span class=\"hljs-number\">1</span>, <span class=\"hljs-attr\">b</span>: <span class=\"hljs-number\">3</span>})\n\nd.<span class=\"hljs-property\">promise</span>.<span class=\"hljs-title function_\">then</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">result</span>) =&gt;</span> {\n  <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">&#x27;result&#x27;</span>, result)\n}).<span class=\"hljs-title function_\">catch</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">err</span>) =&gt;</span> {\n  <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(err)\n})\n\n<span class=\"hljs-comment\">// cancel</span>\n<span class=\"hljs-comment\">// setTimeout(() =&gt; {</span>\n<span class=\"hljs-comment\">//   d.cancel()</span>\n<span class=\"hljs-comment\">// }, 1000)</span></code></pre>","more":"","hash":"9ba631ac47c7a3d0d8944d90e3b28661","isArticle":true,"sort":0,"filename":"","raw":"","prev":null,"next":null,"tocHtml":""},{"id":"what-is-currying","slug":"post/what-is-currying","path":"/post/what-is-currying","title":"认识柯里化（currying）","comments":true,"published":true,"date":"2018-01-04T22:29:17.000Z","updated":"","tags":[{"id":"686155af75a60a0f6e9d80c1f7edd3e9","name":"JavaScript","postCount":16,"postIds":[]},{"id":"f1317ebe11b75f3ced6f0fb9773d50a6","name":"currying","postCount":1,"postIds":[]}],"categories":[{"id":"9abfe4a03928eb88a75a5cd95822dfef","name":"前端","slug":"categories/前端","path":"/categories/前端","parentId":"","postCount":36,"postIds":[]},{"id":"686155af75a60a0f6e9d80c1f7edd3e9","name":"JavaScript","slug":"categories/JavaScript","path":"/categories/JavaScript","parentId":"9abfe4a03928eb88a75a5cd95822dfef","postCount":11,"postIds":[]}],"excerpt":"<p>看文章的时候发现了<code>柯里化</code>一词，然而心中毫无概念，于是就查阅了相关资料有了些许认识。</p>\n","more":"","hash":"9b83a01ba830820907f20c330ac493fc","isArticle":true,"sort":0,"filename":"","raw":"","prev":null,"next":null,"tocHtml":""},{"id":"catch-js-and-ajax-exception","slug":"post/catch-js-and-ajax-exception","path":"/post/catch-js-and-ajax-exception","title":"前端错误捕获以及ajax监听","comments":true,"published":true,"date":"2017-12-20T20:44:10.000Z","updated":"","tags":[{"id":"686155af75a60a0f6e9d80c1f7edd3e9","name":"JavaScript","postCount":16,"postIds":[]},{"id":"c1a751336da265287229972389952205","name":"前端日志","postCount":1,"postIds":[]}],"categories":[{"id":"9abfe4a03928eb88a75a5cd95822dfef","name":"前端","slug":"categories/前端","path":"/categories/前端","parentId":"","postCount":36,"postIds":[]},{"id":"686155af75a60a0f6e9d80c1f7edd3e9","name":"JavaScript","slug":"categories/JavaScript","path":"/categories/JavaScript","parentId":"9abfe4a03928eb88a75a5cd95822dfef","postCount":11,"postIds":[]}],"excerpt":"<p>上线的项目难免会有错误，通过分析日志能够有效、准确地定位、重现并解决错误，从而提升产品体验。以下是根据资料以及目前需求所实现的一个前端日志采集的方案。</p>\n","more":"","hash":"4fde60b5f6d05bd28be27a1768267868","isArticle":true,"sort":0,"filename":"","raw":"","prev":null,"next":null,"tocHtml":""},{"id":"js-variable-promotion","slug":"post/js-variable-promotion","path":"/post/js-variable-promotion","title":"JS变量提升","comments":true,"published":true,"date":"2017-12-11T22:26:18.000Z","updated":"","tags":[{"id":"686155af75a60a0f6e9d80c1f7edd3e9","name":"JavaScript","postCount":16,"postIds":[]}],"categories":[{"id":"9abfe4a03928eb88a75a5cd95822dfef","name":"前端","slug":"categories/前端","path":"/categories/前端","parentId":"","postCount":36,"postIds":[]},{"id":"686155af75a60a0f6e9d80c1f7edd3e9","name":"JavaScript","slug":"categories/JavaScript","path":"/categories/JavaScript","parentId":"9abfe4a03928eb88a75a5cd95822dfef","postCount":11,"postIds":[]}],"excerpt":"<p>变量提升即将变量声明提升到它所在作用域的最开始的部分，ES6 之前 JS 只有全局作用域和函数作用域，ES6 加入了块级作用域，用一对花括号{}包裹的部分。变量提升会将函数声明和部分变量声明提升到作用域顶端。例子如下：</p>\n","more":"","hash":"9f8b1b280ccc51937299876f1ea0d989","isArticle":true,"sort":0,"filename":"","raw":"","prev":null,"next":null,"tocHtml":""},{"id":"css-general-knowledge","slug":"post/css-general-knowledge","path":"/post/css-general-knowledge","title":"CSS小知识","comments":true,"published":true,"date":"2017-12-07T16:52:48.000Z","updated":"","tags":[{"id":"2c56c360580420d293172f42d85dfbed","name":"CSS","postCount":1,"postIds":[]}],"categories":[{"id":"9abfe4a03928eb88a75a5cd95822dfef","name":"前端","slug":"categories/前端","path":"/categories/前端","parentId":"","postCount":36,"postIds":[]},{"id":"2c56c360580420d293172f42d85dfbed","name":"CSS","slug":"categories/CSS","path":"/categories/CSS","parentId":"9abfe4a03928eb88a75a5cd95822dfef","postCount":1,"postIds":[]}],"excerpt":"<p>记录 CSS 一些有用、易忘的知识。</p>\n","more":"","hash":"2e49d1cdd2381727101e97efa3eabd87","isArticle":true,"sort":0,"filename":"","raw":"","prev":null,"next":null,"tocHtml":""},{"id":"js-watch-variable-change","slug":"post/js-watch-variable-change","path":"/post/js-watch-variable-change","title":"JS监听一个变量的变化","comments":true,"published":true,"date":"2017-11-22T16:18:10.000Z","updated":"","tags":[{"id":"686155af75a60a0f6e9d80c1f7edd3e9","name":"JavaScript","postCount":16,"postIds":[]}],"categories":[{"id":"9abfe4a03928eb88a75a5cd95822dfef","name":"前端","slug":"categories/前端","path":"/categories/前端","parentId":"","postCount":36,"postIds":[]},{"id":"686155af75a60a0f6e9d80c1f7edd3e9","name":"JavaScript","slug":"categories/JavaScript","path":"/categories/JavaScript","parentId":"9abfe4a03928eb88a75a5cd95822dfef","postCount":11,"postIds":[]}],"excerpt":"<p>js 监听一个值的变化，当值变化之后能够触发一些操作。</p>\n","more":"","hash":"1c8779de7b19bc69a62a17416d3e6865","isArticle":true,"sort":0,"filename":"","raw":"","prev":null,"next":null,"tocHtml":""}]}