{"current":1,"pageSize":10,"totalPages":4,"result":[{"id":"ime-and-keydown-event","slug":"post/ime-and-keydown-event","path":"/post/ime-and-keydown-event","title":"输入法与 keydown 事件","comments":true,"published":true,"date":"2022-10-20T17:01:39.000Z","updated":"","tags":[],"categories":[{"id":"9abfe4a03928eb88a75a5cd95822dfef","name":"前端","slug":"categories/前端","path":"/categories/前端","parentId":"","postCount":36,"postIds":[]}],"excerpt":"<p>输入、回车提交，这是一组在搜索场景中常见、友好的交互形式，但要将其做好以获得更好的用户体验，还需要关注其中的小小细节。</p>\n","more":"","hash":"1bd48204dba8dd8ca9efa567b07e63e0","isArticle":true,"sort":0,"filename":"","raw":"","prev":null,"next":null,"tocHtml":""},{"id":"react-state-management-based-on-react-hooks","slug":"post/react-state-management-based-on-react-hooks","path":"/post/react-state-management-based-on-react-hooks","title":"基于 React Hooks 的小型状态管理","comments":true,"published":true,"date":"2021-12-26T18:20:42.000Z","updated":"","tags":[{"id":"50ce2da63bea6a618e7578fa50690040","name":"React","postCount":2,"postIds":[]}],"categories":[{"id":"9abfe4a03928eb88a75a5cd95822dfef","name":"前端","slug":"categories/前端","path":"/categories/前端","parentId":"","postCount":36,"postIds":[]},{"id":"50ce2da63bea6a618e7578fa50690040","name":"React","slug":"categories/React","path":"/categories/React","parentId":"9abfe4a03928eb88a75a5cd95822dfef","postCount":2,"postIds":[]}],"excerpt":"<p>一年又又又要过去了，在这 2021 年的尾巴，来写写 React 的状态管理。</p>\n<p>本文主要介绍一种基于 React Hooks 的状态共享方案，介绍其实现，并总结一下使用感受，目的是在状态管理方面提供多一种选择方式。</p>\n","more":"","hash":"7339a57fb5fac85352fa2dd99cdf25b9","isArticle":true,"sort":0,"filename":"","raw":"","prev":null,"next":null,"tocHtml":""},{"id":"blog-link-card","slug":"post/blog-link-card","path":"/post/blog-link-card","title":"在博客中添加卡片式链接","comments":true,"published":true,"date":"2021-08-21T14:27:25.000Z","updated":"","tags":[{"id":"be8df1f28c0abc85a0ed0c6860e5d832","name":"Blog","postCount":3,"postIds":[]}],"categories":[{"id":"9abfe4a03928eb88a75a5cd95822dfef","name":"前端","slug":"categories/前端","path":"/categories/前端","parentId":"","postCount":36,"postIds":[]}],"excerpt":"<p>最近升级了的企业微信，发现发送链接信息的时候，企信会自动拉取链接的标题、描述和图片信息，并组合成卡片的形式进行展示，给人的感觉就很棒，既传递了更多的信息，又显得美观，就想着在博客里也加上这个功能。</p>\n<p>效果是下面这样的，如果展示的还是链接，那可能是还没加载出来或者背后的服务挂了（白嫖不易）：<a data-layout=\"card\" href=\"https://github.com\">Github</a></p>\n<p>截图效果如下：</p>\n<p><img alt=\"卡片截图\" loading=\"lazy\" width=\"390px\" title=\"卡片截图\" class=\"post-image \" src=\"/images/c45ab84aae2e07bf5593e504cc2394ef.blog-link-card.png\" onerror=\"this.onerror=null;this.src='/images/image-error.jpg';\"></p>\n","more":"","hash":"957d422fedf0b641b5ee56d1ac9e676b","isArticle":true,"sort":0,"filename":"","raw":"","prev":null,"next":null,"tocHtml":""},{"id":"site-engine-gugu","slug":"post/site-engine-gugu","path":"/post/site-engine-gugu","title":"博客框架 —— gugu","comments":true,"published":true,"date":"2021-07-25T22:18:00.000Z","updated":"","tags":[{"id":"be8df1f28c0abc85a0ed0c6860e5d832","name":"Blog","postCount":3,"postIds":[]},{"id":"1d9db1ebcf1c30ffc9485e981aec4f04","name":"Vite","postCount":1,"postIds":[]},{"id":"79dcf464d3e1b41635e194883d0c939a","name":"Vue3","postCount":1,"postIds":[]}],"categories":[{"id":"9abfe4a03928eb88a75a5cd95822dfef","name":"前端","slug":"categories/前端","path":"/categories/前端","parentId":"","postCount":36,"postIds":[]}],"excerpt":"<p>很久之就一直想把博客改成单页的，而中间发生了不少咕咕咕（<del>懂得都懂，不懂的我也不用再说了 🐶</del>）的事情，别说改造了，连文都没更新。在咕了大半年之后，终于完成了大改造，将原来使用的 <a href=\"https://hexo.io/\">Hexo</a> 替换成了个人实现的博客框架 <a href=\"https://github.com/daief/blog/tree/master/packages/gugu\">gugu</a>。</p>\n","more":"","hash":"a8a32cd67619054f427012f0acc946d0","isArticle":true,"sort":0,"filename":"","raw":"","prev":null,"next":null,"tocHtml":""},{"id":"build-a-poor-vue","slug":"post/build-a-poor-vue","path":"/post/build-a-poor-vue","title":"学写一个乞丐版 Vue","comments":true,"published":true,"date":"2020-04-02T13:03:54.000Z","updated":"","tags":[{"id":"2d8ec58babcec05d3fe8f712968de749","name":"Vue","postCount":5,"postIds":[]}],"categories":[{"id":"9abfe4a03928eb88a75a5cd95822dfef","name":"前端","slug":"categories/前端","path":"/categories/前端","parentId":"","postCount":36,"postIds":[]},{"id":"2d8ec58babcec05d3fe8f712968de749","name":"Vue","slug":"categories/Vue","path":"/categories/Vue","parentId":"9abfe4a03928eb88a75a5cd95822dfef","postCount":1,"postIds":[]}],"excerpt":"<p><del>没有钱了，肯定要学啊，不学没有钱用。</del></p>\n<p><del>看源码是不可能看的，这辈子不可能看的。写东西又不会写，就是看这种东西，才能维持得了生活这样子。</del></p>\n<p><del>什么 Github、掘金、知乎上面个个都是人才，说话又好听，技术又厉害，超喜欢在上面逛的。</del></p>\n","more":"","hash":"c761fb966e40f6a6bbc0e4ed3f58a5a1","isArticle":true,"sort":0,"filename":"","raw":"","prev":null,"next":null,"tocHtml":""},{"id":"hexo-custom-code-highlight-by-prismjs","slug":"post/hexo-custom-code-highlight-by-prismjs","path":"/post/hexo-custom-code-highlight-by-prismjs","title":"使用 prismjs 自定义 Hexo 代码高亮","comments":true,"published":true,"date":"2020-03-23T16:50:24.000Z","updated":"","tags":[{"id":"be8df1f28c0abc85a0ed0c6860e5d832","name":"Blog","postCount":3,"postIds":[]},{"id":"c00d1eb68b529768ba98c975c76a9b66","name":"Hexo","postCount":1,"postIds":[]}],"categories":[{"id":"9abfe4a03928eb88a75a5cd95822dfef","name":"前端","slug":"categories/前端","path":"/categories/前端","parentId":"","postCount":36,"postIds":[]},{"id":"c00d1eb68b529768ba98c975c76a9b66","name":"Hexo","slug":"categories/Hexo","path":"/categories/Hexo","parentId":"9abfe4a03928eb88a75a5cd95822dfef","postCount":1,"postIds":[]}],"excerpt":"<p>一直就想优化一下 Hexo 的代码高亮部分来着，对 <code>ts</code>、<code>tsx</code> 部分的支持一直不太好；也许直接更新 Next 就能直接解决，但博客部分已经魔改了不少，本着这个原则就继续魔改下去好了。</p>\n<blockquote>\n<p>本站是在 Next 5 的基础上建成的，不过本文内容与 Next 5 的关系不大</p>\n</blockquote>\n","more":"","hash":"5cb61feaa8a607c534c6e7936c2bb437","isArticle":true,"sort":0,"filename":"","raw":"","prev":null,"next":null,"tocHtml":""},{"id":"encapsulation-in-react","slug":"post/encapsulation-in-react","path":"/post/encapsulation-in-react","title":"React 中的一些封装","comments":true,"published":true,"date":"2020-03-22T21:06:34.000Z","updated":"","tags":[{"id":"50ce2da63bea6a618e7578fa50690040","name":"React","postCount":2,"postIds":[]}],"categories":[{"id":"9abfe4a03928eb88a75a5cd95822dfef","name":"前端","slug":"categories/前端","path":"/categories/前端","parentId":"","postCount":36,"postIds":[]},{"id":"50ce2da63bea6a618e7578fa50690040","name":"React","slug":"categories/React","path":"/categories/React","parentId":"9abfe4a03928eb88a75a5cd95822dfef","postCount":2,"postIds":[]}],"excerpt":"<p>结合资料以及一直以来的开发情况，总结记录一下 React 中的封装方式，具体是以下三种：</p>\n<ul>\n<li>HOC</li>\n<li>Render Props</li>\n<li>React Hooks</li>\n</ul>\n","more":"","hash":"f15591dc7b027ccb9301580f6b438c26","isArticle":true,"sort":0,"filename":"","raw":"","prev":null,"next":null,"tocHtml":""},{"id":"function-hoist-and-conditionally-created-functions","slug":"post/function-hoist-and-conditionally-created-functions","path":"/post/function-hoist-and-conditionally-created-functions","title":"函数提升 & 有条件地创建函数","comments":true,"published":true,"date":"2020-03-08T15:54:52.000Z","updated":"","tags":[{"id":"686155af75a60a0f6e9d80c1f7edd3e9","name":"JavaScript","postCount":16,"postIds":[]}],"categories":[{"id":"9abfe4a03928eb88a75a5cd95822dfef","name":"前端","slug":"categories/前端","path":"/categories/前端","parentId":"","postCount":36,"postIds":[]},{"id":"686155af75a60a0f6e9d80c1f7edd3e9","name":"JavaScript","slug":"categories/JavaScript","path":"/categories/JavaScript","parentId":"9abfe4a03928eb88a75a5cd95822dfef","postCount":11,"postIds":[]}],"excerpt":"<p>本文始于这样一道 JavaScript 题目。</p>\n<pre class=\"hljs language-js\" hljs-language=\"js\"><code style=\"display:block;\"><span class=\"hljs-keyword\">var</span> a;\n<span class=\"hljs-keyword\">if</span> (<span class=\"hljs-literal\">true</span>) {\n  a = <span class=\"hljs-number\">5</span>;\n  <span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">a</span>(<span class=\"hljs-params\"></span>) {}\n  a = <span class=\"hljs-number\">2</span>;\n  <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(a);\n}\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(a);</code></pre>","more":"","hash":"fee2b91ee3e981eb03b60c6ae3b8e6e6","isArticle":true,"sort":0,"filename":"","raw":"","prev":null,"next":null,"tocHtml":""},{"id":"oop-in-javascript","slug":"post/oop-in-javascript","path":"/post/oop-in-javascript","title":"JavaScript 中的面向对象","comments":true,"published":true,"date":"2020-02-23T13:19:07.000Z","updated":"","tags":[{"id":"686155af75a60a0f6e9d80c1f7edd3e9","name":"JavaScript","postCount":16,"postIds":[]}],"categories":[{"id":"9abfe4a03928eb88a75a5cd95822dfef","name":"前端","slug":"categories/前端","path":"/categories/前端","parentId":"","postCount":36,"postIds":[]},{"id":"686155af75a60a0f6e9d80c1f7edd3e9","name":"JavaScript","slug":"categories/JavaScript","path":"/categories/JavaScript","parentId":"9abfe4a03928eb88a75a5cd95822dfef","postCount":11,"postIds":[]}],"excerpt":"<p>在 JavaScript 中没有类的概念，因此它的对象与基于类的语言中的对象不同。</p>\n<blockquote>\n<p>ECMA-262 把对象定义为：无序属性的集合，其属性可以包含基本值、对象或函数。</p>\n</blockquote>\n<p>一直以来在编程中都是使用 <code>class</code>、<code>extends</code> 关键字，而这实际上是 ES6 中添加的语法糖。在熟练使用语法糖的同时，有必要了解其背后的原生实现。</p>\n","more":"","hash":"b402900ed7a5b3d3cf6e3bffbdbf98a0","isArticle":true,"sort":0,"filename":"","raw":"","prev":null,"next":null,"tocHtml":""},{"id":"the-prototype-of-javascript","slug":"post/the-prototype-of-javascript","path":"/post/the-prototype-of-javascript","title":"JavaScript 原型相关","comments":true,"published":true,"date":"2020-02-09T10:41:22.000Z","updated":"","tags":[{"id":"686155af75a60a0f6e9d80c1f7edd3e9","name":"JavaScript","postCount":16,"postIds":[]}],"categories":[{"id":"9abfe4a03928eb88a75a5cd95822dfef","name":"前端","slug":"categories/前端","path":"/categories/前端","parentId":"","postCount":36,"postIds":[]},{"id":"686155af75a60a0f6e9d80c1f7edd3e9","name":"JavaScript","slug":"categories/JavaScript","path":"/categories/JavaScript","parentId":"9abfe4a03928eb88a75a5cd95822dfef","postCount":11,"postIds":[]}],"excerpt":"<p>一直以来没有系统地去学习过原型相关的知识概念，虽然平时直接使用不多，但时常会看到，有必要搞明白一点。</p>\n","more":"","hash":"05bc56a654dda0572e5bf1fedb0c01c1","isArticle":true,"sort":0,"filename":"","raw":"","prev":null,"next":null,"tocHtml":""}]}