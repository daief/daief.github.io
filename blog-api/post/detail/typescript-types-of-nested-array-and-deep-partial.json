{"id":"typescript-types-of-nested-array-and-deep-partial","slug":"post/typescript-types-of-nested-array-and-deep-partial","path":"/post/typescript-types-of-nested-array-and-deep-partial","title":"TypeScript 之嵌套数组与深度可选类型","comments":true,"published":true,"date":"2019-09-08T19:22:56.000Z","updated":"","tags":[{"id":"558b544cf685f39d34e4903e39c38b67","name":"TypeScript","postCount":6,"postIds":[]}],"categories":[{"id":"9abfe4a03928eb88a75a5cd95822dfef","name":"前端","slug":"categories/前端","path":"/categories/前端","parentId":"","postCount":36,"postIds":[]},{"id":"558b544cf685f39d34e4903e39c38b67","name":"TypeScript","slug":"categories/TypeScript","path":"/categories/TypeScript","parentId":"9abfe4a03928eb88a75a5cd95822dfef","postCount":4,"postIds":[]}],"excerpt":"<h1 id=\"嵌套数组类型\">嵌套数组类型<a name=\"嵌套数组类型\" class=\"headerlink\" href=\"#嵌套数组类型\"></a></h1><p>以下类型可用于描述嵌套的数组类型。</p>\n","more":"\n\n<pre class=\"hljs language-ts\" hljs-language=\"ts\"><code style=\"display:block;\"><span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title class_\">DeepArray</span>&lt;T&gt; <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title class_\">Array</span>&lt;T | <span class=\"hljs-title class_\">DeepArray</span>&lt;T&gt;&gt; {}\n\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">array</span>: <span class=\"hljs-title class_\">DeepArray</span>&lt;<span class=\"hljs-built_in\">string</span> | <span class=\"hljs-built_in\">boolean</span>&gt; = [\n  <span class=\"hljs-string\">&#x27;string&#x27;</span>,\n  <span class=\"hljs-literal\">true</span>,\n  [<span class=\"hljs-string\">&#x27;string&#x27;</span>],\n  [<span class=\"hljs-literal\">true</span>, [<span class=\"hljs-string\">&#x27;string&#x27;</span>]],\n  [[[<span class=\"hljs-string\">&#x27;string&#x27;</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-string\">&#x27;string&#x27;</span>]]],\n];\n\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">bArray</span>: <span class=\"hljs-title class_\">DeepArray</span>&lt;<span class=\"hljs-built_in\">string</span> | <span class=\"hljs-built_in\">boolean</span>&gt; = [<span class=\"hljs-number\">1</span>]; <span class=\"hljs-comment\">// Error</span></code></pre><blockquote>\n<p><a href=\"https://codeday.me/bug/20190516/1114682.html\">数组 – 在 TypeScript 中描述一个深度嵌套的数组</a></p>\n</blockquote>\n<h1 id=\"深度可选类型\">深度可选类型<a name=\"深度可选类型\" class=\"headerlink\" href=\"#深度可选类型\"></a></h1><p>以下类型可将一个类型的所有属性、子属性转变为 <code>Partial</code>。</p>\n<pre class=\"hljs language-ts\" hljs-language=\"ts\"><code style=\"display:block;\"><span class=\"hljs-keyword\">type</span> <span class=\"hljs-title class_\">DeepPartial</span>&lt;T&gt; = {\n  [P <span class=\"hljs-keyword\">in</span> keyof T]?: T[P] <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title class_\">Array</span>&lt;infer U&gt;\n    ? <span class=\"hljs-title class_\">Array</span>&lt;<span class=\"hljs-title class_\">DeepPartial</span>&lt;U&gt;&gt;\n    : T[P] <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title class_\">ReadonlyArray</span>&lt;infer U&gt;\n    ? <span class=\"hljs-title class_\">ReadonlyArray</span>&lt;<span class=\"hljs-title class_\">DeepPartial</span>&lt;U&gt;&gt;\n    : <span class=\"hljs-title class_\">DeepPartial</span>&lt;T[P]&gt;;\n};\n\n<span class=\"hljs-keyword\">interface</span> A {\n  <span class=\"hljs-attr\">a</span>: {\n    <span class=\"hljs-attr\">a1</span>: {\n      <span class=\"hljs-attr\">a2</span>: <span class=\"hljs-built_in\">string</span>;\n      <span class=\"hljs-attr\">b2</span>: <span class=\"hljs-built_in\">string</span>;\n    };\n    <span class=\"hljs-attr\">b1</span>: {\n      <span class=\"hljs-attr\">a2</span>: <span class=\"hljs-built_in\">number</span>;\n      <span class=\"hljs-attr\">b2</span>: <span class=\"hljs-title class_\">Array</span>&lt;<span class=\"hljs-built_in\">number</span> | <span class=\"hljs-built_in\">string</span>&gt;;\n    };\n  };\n  <span class=\"hljs-attr\">b</span>: <span class=\"hljs-built_in\">string</span>;\n  <span class=\"hljs-attr\">c</span>: <span class=\"hljs-built_in\">number</span>[];\n}\n\n<span class=\"hljs-keyword\">let</span> <span class=\"hljs-attr\">t1</span>: <span class=\"hljs-title class_\">DeepPartial</span>&lt;A&gt;;\n\nt1.<span class=\"hljs-property\">a</span>.<span class=\"hljs-property\">a1</span>.<span class=\"hljs-property\">a2</span>; <span class=\"hljs-comment\">// (property) a2?: string</span>\nt1.<span class=\"hljs-property\">a</span>.<span class=\"hljs-property\">a1</span>.<span class=\"hljs-property\">b2</span>; <span class=\"hljs-comment\">// (property) b2?: string</span>\nt1.<span class=\"hljs-property\">a</span>.<span class=\"hljs-property\">b1</span>.<span class=\"hljs-property\">b2</span>; <span class=\"hljs-comment\">// (property) b2?: (string | number)[]</span>\nt1.<span class=\"hljs-property\">b</span>; <span class=\"hljs-comment\">// (property) b?: string</span>\nt1.<span class=\"hljs-property\">c</span>; <span class=\"hljs-comment\">// (property) c?: number[]</span></code></pre><blockquote>\n<p><a href=\"https://stackoverflow.com/questions/45372227/how-to-implement-typescript-deep-partial-mapped-type-not-breaking-array-properti/49936686#49936686\">How to implement TypeScript deep partial mapped type not breaking array properties</a></p>\n</blockquote>\n<p>注：上述类型中的 <code>extends ... ? ...</code> 可看作类型中的三元表达式。</p>\n<pre class=\"hljs language-ts\" hljs-language=\"ts\"><code style=\"display:block;\"><span class=\"hljs-comment\">// 若泛型 T 继承于 string，则函数 a 返回的类型为 string，否则为 boolean</span>\n<span class=\"hljs-keyword\">function</span> a&lt;T&gt;(<span class=\"hljs-attr\">arg</span>: T): T <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-built_in\">string</span> ? <span class=\"hljs-built_in\">string</span> : <span class=\"hljs-built_in\">boolean</span> {\n  <span class=\"hljs-comment\">// ...</span>\n}\n\n<span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title class_\">MyString</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title class_\">String</span> {}\n\n<span class=\"hljs-title function_\">a</span>(<span class=\"hljs-string\">&#x27;string&#x27;</span>); <span class=\"hljs-comment\">// function a&lt;string&gt;(arg: string): string</span>\n<span class=\"hljs-title function_\">a</span>(<span class=\"hljs-number\">1</span>); <span class=\"hljs-comment\">// function a&lt;number&gt;(arg: number): boolean</span>\n<span class=\"hljs-title function_\">a</span>(<span class=\"hljs-string\">&#x27;string&#x27;</span> <span class=\"hljs-keyword\">as</span> <span class=\"hljs-title class_\">MyString</span>); <span class=\"hljs-comment\">// function a&lt;MyString&gt;(arg: MyString): boolean</span></code></pre>","hash":"ff811fa16c456d82eb469d1dbe3b3eb9","isArticle":true,"sort":0,"filename":"","raw":"","prev":{"id":"troubles-with-web-developing-in-weixin","slug":"post/troubles-with-web-developing-in-weixin","path":"/post/troubles-with-web-developing-in-weixin","title":"微信网页开发踩坑记录","comments":true,"published":true,"date":"2019-09-07T14:51:32.000Z","updated":"","tags":[],"categories":[{"id":"9abfe4a03928eb88a75a5cd95822dfef","name":"前端","slug":"categories/前端","path":"/categories/前端","parentId":"","postCount":36,"postIds":[]}],"excerpt":"<p>如标题所示，本文用于记录在微信中开发页面时所遇到的坑。</p>\n","more":"","hash":"70d0620b5d217df4184ef01c9afc8c55","isArticle":true,"sort":0,"filename":"","raw":"","prev":null,"next":null,"tocHtml":""},"next":{"id":"some-web-debugging-skills","slug":"post/some-web-debugging-skills","path":"/post/some-web-debugging-skills","title":"也许有用的 Web 调试技能","comments":true,"published":true,"date":"2019-11-03T00:37:13.000Z","updated":"","tags":[{"id":"986c37480b1f1c2e443504b38b6361b4","name":"Chrome","postCount":1,"postIds":[]}],"categories":[{"id":"9abfe4a03928eb88a75a5cd95822dfef","name":"前端","slug":"categories/前端","path":"/categories/前端","parentId":"","postCount":36,"postIds":[]}],"excerpt":"<p>记录那些年，我们都在用的调试方法。第一部分主要是一些 Chrome 开发者工具的使用记录；剩余部分是一些其他的调试手段，包括移动端调试、代理内容的介绍。了解 Chrome 开发者的同学，可以跳过第一部分。</p>\n<p><img alt=\"谷歌娘\" loading=\"lazy\" title=\"谷歌娘\" width=\"300px\" class=\"post-image \" src=\"/images/ebf8ca7dbb0fa30d4c6a59d74be9b956.chrome-chan.jpg\" onerror=\"this.onerror=null;this.src='/images/image-error.jpg';\"></p>\n","more":"","hash":"5f05c9ed34d94d93218397db987e5fde","isArticle":true,"sort":0,"filename":"","raw":"","prev":null,"next":null,"tocHtml":""}}