{"id":"css-general-knowledge","slug":"post/css-general-knowledge","path":"/post/css-general-knowledge","title":"CSS小知识","comments":true,"published":true,"date":"2017-12-07T16:52:48.000Z","updated":"","tags":[{"id":"2c56c360580420d293172f42d85dfbed","name":"CSS","postCount":1,"postIds":[]}],"categories":[{"id":"9abfe4a03928eb88a75a5cd95822dfef","name":"前端","slug":"categories/前端","path":"/categories/前端","parentId":"","postCount":36,"postIds":[]},{"id":"2c56c360580420d293172f42d85dfbed","name":"CSS","slug":"categories/CSS","path":"/categories/CSS","parentId":"9abfe4a03928eb88a75a5cd95822dfef","postCount":1,"postIds":[]}],"excerpt":"<p>记录 CSS 一些有用、易忘的知识。</p>\n","more":"\n\n<h3 id=\"pointer-events\">pointer-events<a name=\"pointer-events\" class=\"headerlink\" href=\"#pointer-events\"></a></h3><blockquote>\n<p>指定在什么情况下 (如果有) 某个特定的图形元素可以成为鼠标事件的 target。</p>\n</blockquote>\n<p>可以用于屏蔽鼠标事件。</p>\n<pre class=\"hljs language-css\" hljs-language=\"css\"><code style=\"display:block;\">\n<span class=\"hljs-comment\">/* 元素不会成为鼠标事件的target。*/</span>\n<span class=\"hljs-selector-tag\">div</span> {\n  <span class=\"hljs-attribute\">pointer-events</span>: none;\n}\n</code></pre><blockquote>\n<p>说明：使用pointer-events来阻止元素成为鼠标事件目标不一定意味着元素上的事件侦听器永不会触发。如果元素后代明确指定了pointer-events属性并允许其成为鼠标事件的目标，那么指向该元素的任何事件在事件传播过程中都将通过父元素，并以适当的方式触发其上的事件侦听器。当然位于屏幕上在父元素上但不在后代元素上的鼠标活动都不会被父元素和后代元素捕获（将会穿过父元素而指向位于其下面的元素）。</p>\n</blockquote>\n<h3 id=\"touch-action\">touch-action<a name=\"touch-action\" class=\"headerlink\" href=\"#touch-action\"></a></h3><blockquote>\n<p>用于指定某个给定的区域是否允许用户操作，以及如何响应用户操作（比如浏览器自带的划动、缩放等）。</p>\n</blockquote>\n<p>可用于屏蔽移动端<code>touch</code>事件。</p>\n<pre class=\"hljs language-css\" hljs-language=\"css\"><code style=\"display:block;\"><span class=\"hljs-comment\">/* 触控事件发生在元素上时，不进行任何操作 */</span>\n<span class=\"hljs-selector-tag\">div</span> {\n  touch-action: none;\n}</code></pre><p>触摸动作也经常用于完全解决由支持双击缩放手势引起的点击事件的延迟。</p>\n<pre class=\"hljs language-css\" hljs-language=\"css\"><code style=\"display:block;\"><span class=\"hljs-selector-tag\">html</span> {\n  <span class=\"hljs-comment\">/* 浏览器只允许进行滚动和持续缩放操作。\n  任何其它被auto值支持的行为不被支持。 */</span>\n  touch-action: manipulation;\n}</code></pre><h3 id=\"居中\">居中<a name=\"居中\" class=\"headerlink\" href=\"#居中\"></a></h3><blockquote>\n<p><a href=\"https://www.w3cplus.com/css/centering-css-complete-guide.html\">CSS居中完整指南 https://www.w3cplus.com/css/centering-css-complete-guide.html</a></p>\n</blockquote>\n<h4 id=\"水平居中\">水平居中<a name=\"水平居中\" class=\"headerlink\" href=\"#水平居中\"></a></h4><ol>\n<li><p>行内元素的居中，父元素使用<code>text-align: center;</code></p>\n<pre class=\"hljs language-html\" hljs-language=\"html\"><code style=\"display:block;\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">style</span>&gt;</span><span class=\"language-css\">\n    <span class=\"hljs-selector-tag\">div</span><span class=\"hljs-selector-class\">.out</span> {\n        <span class=\"hljs-attribute\">text-align</span>: center;\n    }\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">style</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;out&quot;</span>&gt;</span>\n    div { text-align: center; }\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">br</span> /&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span>&gt;</span>span<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">br</span> /&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">&quot;javascript:;&quot;</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">&quot;display: inline-block;&quot;</span>&gt;</span>\n        a { display:inline-block; }\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">a</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">br</span> /&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">&quot;display: inline-table;&quot;</span>&gt;</span>\n        div { display:inline-table; }\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></code></pre></li>\n</ol>\n<ol start=\"2\">\n<li><p>块级元素居中，设定宽度，使用<code>margin: 0 auto;</code></p>\n<pre class=\"hljs language-html\" hljs-language=\"html\"><code style=\"display:block;\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">style</span>&gt;</span><span class=\"language-css\">\n    <span class=\"hljs-selector-tag\">div</span><span class=\"hljs-selector-class\">.center</span> {\n        <span class=\"hljs-attribute\">width</span>: <span class=\"hljs-number\">65%</span>;\n        <span class=\"hljs-attribute\">margin</span>: <span class=\"hljs-number\">0</span> auto;\n    }\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">style</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;center&quot;</span>&gt;</span>\n    div { width: 65%;margin: 0 auto; }\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></code></pre></li>\n<li><p>使用<code>position: absloute; left: 50%; margin-left: -(宽度 / 2);</code>\n ```html</p>\n <style>\n     div.center {\n         width: 60%;\n         position: absolute;\n         left: 50%;\n         margin-left: -30%;\n     }\n </style></li>\n</ol>\n<pre class=\"hljs language-undefined\" hljs-language=\"undefined\"><code style=\"display:block;\">&lt;div class=&quot;center&quot;&gt;\n    div { width: 65%;}\n&lt;/div&gt;\n```</code></pre><ol start=\"4\">\n<li><p>使用<code>flex</code>布局</p>\n<pre class=\"hljs language-html\" hljs-language=\"html\"><code style=\"display:block;\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">style</span>&gt;</span><span class=\"language-css\">\n    <span class=\"hljs-comment\">/* 父容器 */</span>\n    <span class=\"hljs-selector-tag\">div</span><span class=\"hljs-selector-class\">.out</span> {\n        <span class=\"hljs-attribute\">display</span>: flex;\n        <span class=\"hljs-attribute\">justify-content</span>: center;\n    }\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">style</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;out&quot;</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;center&quot;</span>&gt;</span>\n        div.center\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></code></pre></li>\n</ol>\n<h4 id=\"垂直居中\">垂直居中<a name=\"垂直居中\" class=\"headerlink\" href=\"#垂直居中\"></a></h4><ol>\n<li><p>设置<code>line-height</code>与<code>height</code>相等</p>\n<pre class=\"hljs language-html\" hljs-language=\"html\"><code style=\"display:block;\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">style</span>&gt;</span><span class=\"language-css\">\n    <span class=\"hljs-selector-class\">.div1</span> {\n        <span class=\"hljs-attribute\">height</span>: <span class=\"hljs-number\">60px</span>;\n        <span class=\"hljs-attribute\">line-height</span>: <span class=\"hljs-number\">60px</span>;\n    }\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">style</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;div1&quot;</span>&gt;</span>\n    文本文本 text text\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n</code></pre></li>\n<li><p>设置一个类似<code>table-cell</code>的父级容器，使用<code>vertical-align: middle;</code></p>\n<pre class=\"hljs language-html\" hljs-language=\"html\"><code style=\"display:block;\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">style</span>&gt;</span><span class=\"language-css\">\n    <span class=\"hljs-selector-tag\">div</span> {\n        <span class=\"hljs-attribute\">height</span>: <span class=\"hljs-number\">60px</span>;\n        <span class=\"hljs-attribute\">vertical-align</span>: middle;\n        <span class=\"hljs-attribute\">display</span>: table-cell;\n    }\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">style</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n    文本文本 text text\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n</code></pre></li>\n<li><p>使用<code>flex</code>布局</p>\n<pre class=\"hljs language-html\" hljs-language=\"html\"><code style=\"display:block;\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">style</span>&gt;</span><span class=\"language-css\">\n    <span class=\"hljs-selector-class\">.out</span> {\n        <span class=\"hljs-attribute\">height</span>: <span class=\"hljs-number\">60px</span>;\n        <span class=\"hljs-attribute\">display</span>: flex;\n        <span class=\"hljs-attribute\">align-items</span>: center;\n    }\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">style</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;out&quot;</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;center&quot;</span>&gt;</span>\n        content\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></code></pre></li>\n<li><p>幽灵元素，在垂直居中的元素上添加伪元素，设置伪元素的高等于父级容器的高，然后为文本添加<code>vertical-align: middle;</code>样式，即可实现垂直居中。</p>\n<pre class=\"hljs language-html\" hljs-language=\"html\"><code style=\"display:block;\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">style</span>&gt;</span><span class=\"language-css\">\n    <span class=\"hljs-selector-class\">.ghost-center</span> {\n        <span class=\"hljs-attribute\">position</span>: relative;\n    }\n    <span class=\"hljs-selector-class\">.ghost-center</span><span class=\"hljs-selector-pseudo\">::before</span> {\n        <span class=\"hljs-attribute\">content</span>: <span class=\"hljs-string\">&quot; &quot;</span>;\n        <span class=\"hljs-attribute\">display</span>: inline-block;\n        <span class=\"hljs-attribute\">height</span>: <span class=\"hljs-number\">100%</span>;\n        <span class=\"hljs-attribute\">width</span>: <span class=\"hljs-number\">1%</span>;\n        <span class=\"hljs-attribute\">vertical-align</span>: middle;\n    }\n    <span class=\"hljs-selector-class\">.ghost-center</span> <span class=\"hljs-selector-tag\">p</span> {\n        <span class=\"hljs-attribute\">display</span>: inline-block;\n        <span class=\"hljs-attribute\">vertical-align</span>: middle;\n    }\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">style</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;ghost-center&quot;</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span>\n        文本文本文本文本文本文本文本文本\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></code></pre></li>\n<li><p>未知元素的高度，使用<code>transform</code>的<code>translate</code>，将元素的中心和父容器的中心重合，从而实现垂直居中</p>\n<blockquote>\n<p>使用<code>transform</code>有一个缺陷，就是当计算结果含有小数时（比如 0.5），会让整个元素看起来是模糊的，一种解决方案就是为父级元素设置 <code>transform-style: preserve-3d;</code></p>\n</blockquote>\n<pre class=\"hljs language-html\" hljs-language=\"html\"><code style=\"display:block;\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">style</span>&gt;</span><span class=\"language-css\">\n    <span class=\"hljs-selector-class\">.center</span> {\n        <span class=\"hljs-attribute\">position</span>: absolute;\n        <span class=\"hljs-attribute\">top</span>: <span class=\"hljs-number\">50%</span>;\n        <span class=\"hljs-attribute\">transform</span>: <span class=\"hljs-built_in\">translateY</span>(-<span class=\"hljs-number\">50%</span>);\n    }\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">style</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;center&quot;</span>&gt;</span>\n    文本文本 内容内容\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></code></pre></li>\n</ol>\n<h3 id=\"一种居中设置背景图像的方式\">一种居中设置背景图像的方式<a name=\"一种居中设置背景图像的方式\" class=\"headerlink\" href=\"#一种居中设置背景图像的方式\"></a></h3><pre class=\"hljs language-css\" hljs-language=\"css\"><code style=\"display:block;\"><span class=\"hljs-selector-tag\">body</span>{\n    <span class=\"hljs-attribute\">background</span>: <span class=\"hljs-built_in\">url</span>(<span class=\"hljs-string\">../../images/body.jpg</span>);\n    <span class=\"hljs-attribute\">background-repeat</span>: no-repeat;\n    <span class=\"hljs-comment\">/* 当页面的其余部分滚动时，背景图像不会移动。 */</span>\n    <span class=\"hljs-attribute\">background-attachment</span>: fixed;\n    <span class=\"hljs-comment\">/* 背景图像的起始位置 */</span>\n    <span class=\"hljs-attribute\">background-position</span>: center;\n    <span class=\"hljs-comment\">/* 把背景图像扩展至足够大，以使背景图像完全覆盖背景区域。\n        背景图像的某些部分也许无法显示在背景定位区域中。*/</span>\n    <span class=\"hljs-attribute\">background-size</span>: cover;\n}</code></pre><h3 id=\"自定义<code>radio</code>样式\">自定义<code>radio</code>样式<a name=\"自定义<code>radio</code>样式\" class=\"headerlink\" href=\"#自定义<code>radio</code>样式\"></a></h3><pre class=\"hljs language-html\" hljs-language=\"html\"><code style=\"display:block;\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">style</span>&gt;</span><span class=\"language-css\">\n    <span class=\"hljs-selector-tag\">input</span><span class=\"hljs-selector-class\">.css-radio</span> {\n        <span class=\"hljs-attribute\">width</span>: <span class=\"hljs-number\">20px</span>;\n        <span class=\"hljs-attribute\">height</span>: <span class=\"hljs-number\">20px</span>;\n        <span class=\"hljs-attribute\">display</span>: inline-block;\n        <span class=\"hljs-attribute\">position</span>: relative;\n        <span class=\"hljs-attribute\">border</span>: solid <span class=\"hljs-number\">#999</span> <span class=\"hljs-number\">1px</span>;\n        <span class=\"hljs-attribute\">border-radius</span>: <span class=\"hljs-number\">50%</span>;\n        <span class=\"hljs-attribute\">outline</span>: none;\n        <span class=\"hljs-comment\">/* 取消浏览器默认外观 */</span>\n        -webkit-appearance: none;\n        appearance: none;\n        <span class=\"hljs-attribute\">transition</span>: all .<span class=\"hljs-number\">3s</span>;\n    }\n    <span class=\"hljs-selector-tag\">input</span><span class=\"hljs-selector-class\">.css-radio</span><span class=\"hljs-selector-pseudo\">:checked</span> {\n        <span class=\"hljs-attribute\">border</span>: solid <span class=\"hljs-number\">#ff4081</span> <span class=\"hljs-number\">1px</span>;\n        <span class=\"hljs-attribute\">background</span>: <span class=\"hljs-number\">#ff4081</span>;\n    }\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">style</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;radio&quot;</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;css-radio&quot;</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">&quot;red&quot;</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;color&quot;</span> /&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;radio&quot;</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;css-radio&quot;</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">&quot;blue&quot;</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;color&quot;</span> /&gt;</span></code></pre><h3 id=\"0.5px 边框\">0.5px 边框<a name=\"0.5px 边框\" class=\"headerlink\" href=\"#0.5px 边框\"></a></h3><pre class=\"hljs language-html\" hljs-language=\"html\"><code style=\"display:block;\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">style</span>&gt;</span><span class=\"language-css\">\n<span class=\"hljs-selector-class\">.tiny-border</span> {\n  <span class=\"hljs-attribute\">position</span>: relative;\n  <span class=\"hljs-attribute\">text-align</span>: center;\n  <span class=\"hljs-attribute\">width</span>: <span class=\"hljs-number\">50%</span>;\n  <span class=\"hljs-attribute\">height</span>: <span class=\"hljs-number\">50px</span>;\n  <span class=\"hljs-attribute\">line-height</span>: <span class=\"hljs-number\">50px</span>;\n  <span class=\"hljs-attribute\">margin</span>: <span class=\"hljs-number\">10px</span> auto;\n  <span class=\"hljs-attribute\">background-color</span>: <span class=\"hljs-number\">#18FFFF</span>;\n}\n<span class=\"hljs-selector-class\">.tiny-border</span><span class=\"hljs-selector-pseudo\">:before</span> {\n  <span class=\"hljs-attribute\">content</span>: <span class=\"hljs-string\">&quot;&quot;</span>;\n  <span class=\"hljs-attribute\">position</span>: absolute;\n  <span class=\"hljs-attribute\">box-sizing</span>: border-box;\n  <span class=\"hljs-attribute\">width</span>: <span class=\"hljs-number\">200%</span>;\n  <span class=\"hljs-attribute\">height</span>: <span class=\"hljs-number\">200%</span>;\n  <span class=\"hljs-attribute\">top</span>: <span class=\"hljs-number\">0</span>;\n  <span class=\"hljs-attribute\">left</span>: <span class=\"hljs-number\">0</span>;\n  <span class=\"hljs-attribute\">transform</span>: <span class=\"hljs-built_in\">scale</span>(<span class=\"hljs-number\">0.5</span>);\n  <span class=\"hljs-attribute\">transform-origin</span>: <span class=\"hljs-number\">0</span> <span class=\"hljs-number\">0</span>;\n  <span class=\"hljs-attribute\">border</span>: <span class=\"hljs-number\">1px</span> solid <span class=\"hljs-number\">#000</span>;\n}\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">style</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;tiny-border&quot;</span>&gt;</span>0.5px border<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n</code></pre>","hash":"2e49d1cdd2381727101e97efa3eabd87","isArticle":true,"sort":0,"filename":"","raw":"","prev":{"id":"js-watch-variable-change","slug":"post/js-watch-variable-change","path":"/post/js-watch-variable-change","title":"JS监听一个变量的变化","comments":true,"published":true,"date":"2017-11-22T16:18:10.000Z","updated":"","tags":[{"id":"686155af75a60a0f6e9d80c1f7edd3e9","name":"JavaScript","postCount":16,"postIds":[]}],"categories":[{"id":"9abfe4a03928eb88a75a5cd95822dfef","name":"前端","slug":"categories/前端","path":"/categories/前端","parentId":"","postCount":36,"postIds":[]},{"id":"686155af75a60a0f6e9d80c1f7edd3e9","name":"JavaScript","slug":"categories/JavaScript","path":"/categories/JavaScript","parentId":"9abfe4a03928eb88a75a5cd95822dfef","postCount":11,"postIds":[]}],"excerpt":"<p>js 监听一个值的变化，当值变化之后能够触发一些操作。</p>\n","more":"","hash":"1c8779de7b19bc69a62a17416d3e6865","isArticle":true,"sort":0,"filename":"","raw":"","prev":null,"next":null,"tocHtml":""},"next":{"id":"js-variable-promotion","slug":"post/js-variable-promotion","path":"/post/js-variable-promotion","title":"JS变量提升","comments":true,"published":true,"date":"2017-12-11T22:26:18.000Z","updated":"","tags":[{"id":"686155af75a60a0f6e9d80c1f7edd3e9","name":"JavaScript","postCount":16,"postIds":[]}],"categories":[{"id":"9abfe4a03928eb88a75a5cd95822dfef","name":"前端","slug":"categories/前端","path":"/categories/前端","parentId":"","postCount":36,"postIds":[]},{"id":"686155af75a60a0f6e9d80c1f7edd3e9","name":"JavaScript","slug":"categories/JavaScript","path":"/categories/JavaScript","parentId":"9abfe4a03928eb88a75a5cd95822dfef","postCount":11,"postIds":[]}],"excerpt":"<p>变量提升即将变量声明提升到它所在作用域的最开始的部分，ES6 之前 JS 只有全局作用域和函数作用域，ES6 加入了块级作用域，用一对花括号{}包裹的部分。变量提升会将函数声明和部分变量声明提升到作用域顶端。例子如下：</p>\n","more":"","hash":"9f8b1b280ccc51937299876f1ea0d989","isArticle":true,"sort":0,"filename":"","raw":"","prev":null,"next":null,"tocHtml":""}}